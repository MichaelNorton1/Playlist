{"version":3,"sources":["components/Nav.js","components/Results.js","components/SearchModal.js","spotify.png","components/Menu.js","spotifyState/getTrackUris/getTrackUris.js","spotifyState/createPlaylist/createPlaylist.js","spotifyState/addToPlaylist/addToPlaylist.js","spotifyState/getUserId/getUserid.js","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","checked","setChecked","theme","useTheme","useEffect","Grid","container","sx","display","m","breakpoints","up","width","justifyContent","alignItems","item","xs","Slide","direction","in","style","transitionDelay","mountOnEnter","unmountOnExit","Paper","borderRadius","boxShadow","variant","Typography","align","p","Results","singleSearch","List","maxWidth","bgcolor","overflow","maxHeight","length","map","value","index","ListItemButton","divider","ListItem","disableGutters","ListItemText","primary","position","top","left","transform","border","SearchModal","setPlaylists","loggedIn","setMySetlist","search","setSearch","show","setShow","year","setYear","open","setOpen","setSingleSearch","loading","setLoading","getBands","e","a","formatBand","replace","type","fetch","method","headers","body","JSON","stringify","band","yearOf","then","response","json","catch","error","console","log","set","element","sets","changingData","songs","filter","forEach","push","final","g","song","includes","name","previous","Button","disabled","color","onClick","Modal","onClose","Box","textAlign","background","palette","default","TextField","pa","label","onChange","target","defaultValue","CircularProgress","fontSize","require","Avatar","Menu","playlist","columnSpacing","height","window","location","href","endIcon","src","pic","getTrackUris","accessToken","setlist","format","x","Authorization","res","data","tracks","items","uri","Promise","all","createPlaylist","description","public","id","resolve","addToPlaylist","playlistID","uris","undefined","getUserId","setData","token","Display","mySetlist","deleteHandler","makePlaylist","Accordion","AccordionSummary","expandIcon","AccordionDetails","margin","Add","themeLight","createTheme","App","setLoggedIn","setToken","querystring","parse","access_token","ThemeProvider","CssBaseline","create","each","filtered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7343ec51.chunk.js","sourcesContent":["import { useTheme } from \"@emotion/react\";\nimport { Grid, Paper, Typography, Slide } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nconst Nav = () => {\n  const [checked, setChecked] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    setChecked(true);\n  }, []);\n\n  return (\n    <Grid\n      container\n      sx={{\n        display: \"flex\",\n        m: \"auto\",\n        [theme.breakpoints.up(\"xs\")]: {\n          width: \"100%\",\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n        },\n      }}\n    >\n      <Grid item xs={3}>\n        <Slide\n          direction=\"right\"\n          in={checked}\n          style={{ transitionDelay: \"300ms\" }}\n          mountOnEnter\n          unmountOnExit\n        >\n          {\n            <Paper\n              sx={{\n                borderRadius: 16,\n                // width: 240,\n                // height: 50,\n                boxShadow: 4,\n              }}\n              variant=\"outlined\"\n            >\n              <Typography align=\"center\" sx={{ p: 1.5 }}>\n                Make My Concert\n              </Typography>\n            </Paper>\n          }\n        </Slide>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Nav;\n","import { List, ListItem, ListItemButton, ListItemText } from \"@mui/material\";\n\nexport default function Results({ singleSearch }) {\n  return (\n    <List\n      sx={{\n        width: \"100%\",\n        maxWidth: 360,\n        bgcolor: \"background.paper\",\n        overflow: \"auto\",\n        maxHeight: 300,\n      }}\n    >\n      {singleSearch.length > 0 ? (\n        singleSearch.map((value, index) => (\n          <ListItemButton key={value} divider>\n            <ListItem key={value} disableGutters>\n              <ListItemText primary={index + 1 + \". \" + value} />\n            </ListItem>\n          </ListItemButton>\n        ))\n      ) : (\n        <div></div>\n      )}\n    </List>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport { useState } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Results from \"./Results\";\nimport { useTheme } from \"@emotion/react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction SearchModal({ setPlaylists, loggedIn, setMySetlist }) {\n  // state and togglers\n  const [search, setSearch] = useState(null);\n  const [show, setShow] = useState(false);\n  const [year, setYear] = useState(\"2021\");\n  const [open, setOpen] = useState(false);\n  const [singleSearch, setSingleSearch] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    setSearch(\"\");\n    setSingleSearch(\"\");\n    setShow(false);\n    setLoading(false);\n  };\n\n  // getting theme\n  const theme = useTheme();\n\n  // Fetching functions\n  const getBands = async (e) => {\n    if (!search && year.length < 4) {\n      return;\n    }\n    const formatBand = search.replace(\" \", \"-\");\n    if (e.type === \"click\") {\n      setLoading(true);\n      const set = await fetch(\"http://localhost:8888/band\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ band: formatBand, yearOf: year }),\n      })\n        .then((response) => response.json())\n        .catch((error) => console.log(error));\n\n      if (!set.error) {\n        setLoading(false);\n        const sets = await set.map((element) => element.sets.set);\n        return sets;\n      }\n      if (set.error) {\n        setLoading(false);\n        return set;\n      }\n    }\n  };\n\n  const changingData = async (e) => {\n    if (e) {\n      const songs = await getBands(e);\n      if (!songs.error) {\n        setLoading(false);\n        setShow(true);\n        ///Below needs a refactor\n\n        let filter = [];\n        songs.forEach((element) => {\n          if (element.length > 0) {\n            filter.push(...element);\n          }\n        });\n\n        let final = [];\n        for (let g of filter) {\n          for (let songs of g.song) {\n            if (!final.includes(songs.name)) {\n              final.push(songs.name);\n            }\n          }\n        }\n        setSingleSearch(final);\n        setPlaylists((previous) => {\n          if (previous.length > 0) return [...previous, singleSearch];\n          else {\n            return [singleSearch];\n          }\n        });\n      } else {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Button\n          disabled={!loggedIn}\n          sx={{ color: \"black\" }}\n          onClick={handleOpen}\n        >\n          Search For Artists\n        </Button>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            {!show ? (\n              <div>\n                <TextField\n                  sx={{ pa: 2 }}\n                  label=\"Search for Band\"\n                  onChange={(e) => setSearch(e.target.value)}\n                ></TextField>\n                <TextField\n                  sx={{ pa: 2 }}\n                  defaultValue=\"2021\"\n                  label=\"Year\"\n                  onChange={(e) => setYear(e.target.value)}\n                ></TextField>\n                <Button>\n                  {loading ? (\n                    <CircularProgress></CircularProgress>\n                  ) : (\n                    <SearchIcon\n                      fontSize=\"large\"\n                      onClick={(e) => changingData(e)}\n                    ></SearchIcon>\n                  )}\n                </Button>\n              </div>\n            ) : (\n              <Box>\n                <Typography\n                  textAlign=\"center\"\n                  sx={{\n                    background: theme.palette.background.default,\n                    borderRadius: 25,\n                  }}\n                  variant=\"h4\"\n                >\n                  {search}\n                </Typography>\n                <Button\n                  onClick={() => {\n                    setMySetlist((previous) => {\n                      if (previous.length === 0) {\n                        return [{ band: search, set: singleSearch }];\n                      } else {\n                        return [\n                          ...previous,\n                          { band: search, set: singleSearch },\n                        ];\n                      }\n                    });\n                  }}\n                  sx={{\n                    color: theme.palette.background.default,\n                    m: 2,\n                    borderRadius: 25,\n                    border: \"black\",\n                    background: \"black\",\n                    \":hover\": { background: \"black\" },\n                  }}\n                  // variant=\"outlined\"\n                >\n                  Add to Playlists\n                </Button>\n                <Results singleSearch={singleSearch}></Results>\n              </Box>\n            )}\n          </Box>\n        </Modal>\n      </div>\n    </div>\n  );\n}\nexport default SearchModal;\n","export default __webpack_public_path__ + \"static/media/spotify.2ad9efcc.png\";","import { useState } from \"react\";\n\nimport SearchModal from \"../components/SearchModal.js\";\n\nimport pic from \"../spotify.png\";\n\nconst { Paper, Grid, Button, Avatar } = require(\"@mui/material\");\n\nconst Menu = ({ setMySetlist, loggedIn }) => {\n  const [playlist, setPlaylists] = useState([]);\n\n  const spotifyLogin = () => {\n    window.location = window.location.href.includes(\"localhost\")\n      ? \"http://localhost:8888/login\"\n      : \"https://better-playlists-backend.herokuapp.com/login\";\n  };\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      justifyContent=\"space-evenly\"\n      columnSpacing={2}\n      sx={{\n        height: 100,\n        background: \"linear-gradient(to right bottom, white, #0000)\",\n        borderRadius: 24,\n      }}\n    >\n      {\" \"}\n      <Grid item>\n        <Paper sx={{}}>\n          <SearchModal\n            loggedIn={loggedIn}\n            setMySetlist={setMySetlist}\n            playlist={playlist}\n            setPlaylists={setPlaylists}\n            sx={{ p: 1, height: 72, width: 210 }}\n          ></SearchModal>\n        </Paper>\n      </Grid>\n      <Grid item>\n        <Paper>\n          <Button\n            onClick={() => {\n              spotifyLogin();\n            }}\n            sx={{ color: \"black\" }}\n            endIcon={<Avatar src={pic}></Avatar>}\n          >\n            Login to Spotify{\" \"}\n          </Button>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Menu;\n","const getTrackUris = (accessToken, setlist) => {\n  let playlist = [];\n\n  setlist[0].set.forEach((element) => {\n    const format = element.replace(\" \", \"%20\");\n\n    let x = fetch(\n      `https://api.spotify.com/v1/search?q=${format}%20artist:${setlist[0].band}&type=track`,\n      {\n        method: \"GET\", // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + accessToken,\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.tracks.items.length > 0) {\n          return data.tracks.items[0].uri;\n        }\n      });\n\n    playlist.push(x);\n  });\n\n  return Promise.all(playlist);\n};\n\nexport default getTrackUris;\n","const createPlaylist = (data, accessToken, band) => {\n  let x = fetch(`https://api.spotify.com/v1/users/${data}/playlists`, {\n    method: \"POST\", // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + accessToken,\n    },\n    body: JSON.stringify({\n      name: `${band[0].band} Setlist`,\n      description: `Created by Make my Concert`,\n      public: true,\n    }),\n  })\n    .then((data) => data.json())\n    .then((data) => data.id);\n  return Promise.resolve(x);\n};\n\nexport default createPlaylist;\n","const addToPlaylist = (accessToken, playlistID, uris) => {\n  Promise.resolve(uris).then((data) => {\n    const songs = data.filter((songs) => songs !== undefined);\n    fetch(`https://api.spotify.com/v1/playlists/${playlistID}/tracks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + accessToken,\n      },\n      body: JSON.stringify({\n        uris: songs,\n      }),\n    })\n      .then((data) => data.json())\n      .then((data) => data)\n      .catch((error) => console.log(error));\n  });\n};\n\nexport default addToPlaylist;\n","const getUserId = (setData, token) => {\n  fetch(\"https://api.spotify.com/v1/me\", {\n    headers: { Authorization: \"Bearer \" + token },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.id) {\n        setData(data.id);\n      }\n    })\n    .catch((error) => console.log(error));\n};\n\nexport default getUserId;\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { Add } from \"@mui/icons-material\";\nconst Display = ({ mySetlist, deleteHandler, makePlaylist }) => {\n  return (\n    <Paper\n      sx={{\n        m: 2,\n        borderRadius: 10,\n        height: 240,\n        background: \"linear-gradient(to right bottom, white, #0000)\",\n      }}\n    >\n      {mySetlist.length > 0 ? (\n        mySetlist.map((set) => {\n          return (\n            <Accordion key={set.band}>\n              <AccordionSummary\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-content\"\n                expandIcon={<ExpandMoreIcon />}\n              >\n                <Typography>{set.band}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Button\n                  onClick={() => {\n                    deleteHandler(set.band);\n                  }}\n                  style={{ border: \"2px solid\", margin: 4 }}\n                  color=\"error\"\n                  endIcon={<DeleteForeverIcon />}\n                >\n                  {\" \"}\n                  Delete from setlist\n                </Button>\n                <Button\n                  onClick={() => makePlaylist(set.band)}\n                  style={{ border: \"2px solid\" }}\n                  endIcon={<Add></Add>}\n                >\n                  {\" \"}\n                  add to Spotify\n                </Button>\n                {set.set.map((value, index) => (\n                  <ListItemButton key={value} divider>\n                    <ListItem key={value} disableGutters>\n                      <ListItemText primary={index + 1 + \". \" + value} />\n                    </ListItem>\n                  </ListItemButton>\n                ))}\n              </AccordionDetails>\n            </Accordion>\n          );\n        })\n      ) : (\n        <Box sx={{}}>\n          <Typography justifyContent=\"center\" textAlign=\"center\" width=\"100%\">\n            {\" \"}\n            Login and add artists to your Playlist!\n          </Typography>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default Display;\n","import { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport Nav from \"../src/components/Nav.js\";\nimport Menu from \"../src/components/Menu\";\nimport querystring from \"query-string\";\nimport getTrackUris from \"../src/spotifyState/getTrackUris/getTrackUris\";\nimport createPlaylist from \"../src/spotifyState/createPlaylist/createPlaylist\";\nimport addToPlaylist from \"../src/spotifyState/addToPlaylist/addToPlaylist\";\nimport getUserId from \"../src/spotifyState/getUserId/getUserid\";\nimport \"./App.css\";\nimport Display from \"./components/Display.js\";\nimport { useEffect, useState } from \"react\";\nconst themeLight = createTheme({\n  palette: {\n    background: {\n      default: \"#ABCED2\",\n    },\n  },\n});\nfunction App() {\n  const [mySetlist, setMySetlist] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n  const [data, setData] = useState(null);\n  //\n  useEffect(() => {\n    let parsed = querystring.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    if (!accessToken) {\n      return;\n    } else {\n      setLoggedIn(true);\n      setToken(accessToken);\n      getUserId(setData, token);\n    }\n  }, [token]);\n\n  const makePlaylist = (band) => {\n    const create = mySetlist.filter((each) => each.band === band);\n    createPlaylist(data, token, create).then((playlistID) =>\n      addToPlaylist(token, playlistID, getTrackUris(token, create))\n    );\n  };\n\n  const deleteHandler = (band) => {\n    const filtered = mySetlist.filter((set) => set.band !== band);\n    setMySetlist(filtered);\n  };\n\n  return (\n    <ThemeProvider theme={themeLight}>\n      <CssBaseline />\n\n      <Nav></Nav>\n\n      <Menu\n        setMySetlist={setMySetlist}\n        loggedIn={loggedIn}\n        mySetlist={mySetlist}\n      ></Menu>\n      <Display\n        mySetlist={mySetlist}\n        makePlaylist={makePlaylist}\n        deleteHandler={deleteHandler}\n      ></Display>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}